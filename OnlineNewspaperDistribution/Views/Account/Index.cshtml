@model OnlineNewspaperDistribution.ViewModels.UserLoginViewModel

@{
    ViewBag.Title = "Login Page";
}

<h2>User Login</h2>
@*

    <p>
        @Html.ActionLink("Create New", "Create")
    </p>
    <table class="table">
        <tr>
            <th>
                @Html.DisplayNameFor(model => model.UserName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.EmailId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserSalt)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.UserTypeId)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Password)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.CreatedDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastEditedBy)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.LastEditedDateTime)
            </th>
            <th></th>
        </tr>

    @foreach (var item in Model) {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.UserName)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.EmailId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserSalt)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UserTypeId)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Password)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreatedDateTime)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastEditedBy)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.LastEditedDateTime)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new { id=item.UserId }) |
                @Html.ActionLink("Details", "Details", new { id=item.UserId }) |
                @Html.ActionLink("Delete", "Delete", new { id=item.UserId })
            </td>
        </tr>
    }

    </table>*@
@using (Html.BeginForm("Login", "Account", FormMethod.Post, new { }))
{

    @Html.AntiForgeryToken()
    @Html.ValidationSummary(false, null, new { @class = "Text-danger" })

   
    <div class="form-group">
        @Html.LabelFor(model => model.EmailId)
        @Html.TextBoxFor(model => model.EmailId, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.EmailId, null, new { @class = "text-danger" })
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Password)
        @Html.PasswordFor(model => model.Password, new { @class = "form-control" })
        @Html.ValidationMessageFor(model => model.Password, null, new { @class = "text-danger" })
    </div>
    <input type="submit" value="Login" name="Login"/>

    <style>
        body {
            background-image: url("https://media.istockphoto.com/photos/reading-picture-id1158715205?k=20&m=1158715205&s=612x612&w=0&h=pvpsiDbDgh_ahfXqQ7FrpdNMz1uxVQ0yAmov0Laye9E=");
            background-repeat: no-repeat;
            background-size: 100% 180%;
        }
        .badge1 {
            color: red !important;
                background-color: none !important;
        }

    </style>

}
